	class metodos
{
     int a = 10;     //boolean prueba = par(500);
     void Hanoii(int discos, String origen, String aux, String destino)
     {
           if(discos == 1)
          {               println("Mover Disco de " + origen + " a " + destino);
          }          else          {                 Hanoii(discos - 1, origen, destino, aux);                 println("Mover disco de " + origen + " a " + destino);                 Hanoii(discos - 1, aux, origen, destino);
          }
     }
     boolean par(int num)
     {
          if(num == 0)
          {
               return true;
          }
          return impar(num - 1);
     }
     boolean impar(int num)
     {
          if(num == 0)
          {               return false;
          }
          return par(num - 1);
     }
     int ackermann(int m, int n)
     {	//println("m: " + m + " n: " + n);
             if (m == 0)
             {
                 return (n + 1);
             }
             else if (m > 0 && n == 0) 
             {
                 return ackermann(m - 1, 1);
             } 
             else              {
                 return ackermann(m - 1, ackermann(m, n - 1));
             }
     }

     int factorial(int n){
        //return n == 0 ? 1 : n * factorial(n - 1);

        switch(n){

            case 0:
                return 1;

            default:
                return n * factorial(n - 1); 
                //return -100; //Si llega aquí está mal
        }
    }

    int potencia(int base, int exp) {
        //return exp == 0 ? 1 : (base * potencia(base, exp - 1));

        switch(exp){
            case 0:
                return 1;
            case 0:
                return -100; //Si llega aquí está mal
            default:
                return (base * potencia(base, exp - 1));
                return -100; //Si llega aquí está mal

        }
    }

    int fibonacci(int n) {
        if (n <= 1) {
            return n;
        }
        return (fibonacci(n - 1) + fibonacci(n - 2));
    }

    String Hanoi (int discos, int origen, int auxiliar, int destino) {
         String result = "";
        if (discos == 1) {
            result = result + (origen + destino);
        } else {
            result = result + Hanoi(discos - 1, origen, destino, auxiliar);
            result = result + (origen + destino);
            result = result + Hanoi(discos - 1, auxiliar, origen, destino);
        }
        return result;
    }

    int hofstaderMasculino(int n) {
        if (n < 0) {
            return 0;
        } else {
            //return n == 0 ? 0 : n - hofstaderMasculino(n - 1);
            if(n != 0){
                return n - hofstaderMasculino(n - 1);
            }else{ //Si n == 0
                return 0;
                return -100; //Si llega aquí está mal
            }
        }
    }
}